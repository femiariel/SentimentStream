version: '3'
services:
  spark:
    build: ./spark
    container_name: spark
    networks:
      - kafka-net
    command: /bin/bash -c "sleep 100 && /opt/bitnami/spark/bin/spark-submit --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.1.1 /opt/bitnami/spark/work/str.py & sleep 50 && python /opt/bitnami/spark/work/dash_server.py"
    ports:
      - "8050:8050"
      - "9090:8080"
      - "7077:7077"
    volumes:
      - ./spark/str.py:/opt/bitnami/spark/work/str.py
      - ./spark/requirementsspark.txt:/opt/bitnami/spark/work/requirementsspark.txt
  streaming:
    build: ./streaming
    container_name: streaming
    networks:
      - kafka-net
    command: /bin/sh -c "sleep 30 && python redd.py"
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "baeldung:1:1"
    networks:
      - kafka-net
networks:
  kafka-net:
    driver: bridge


